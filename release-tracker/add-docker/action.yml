name: Add a new entry for a docker release
description: |
  Convenience action to clone the release tracking repository,
  and add an entry for the release of one or more Docker images.

inputs:
  repository:
    description: The release tracking repository
    required: true
  path:
    description: The directory where the repository was cloned
    default: src/tracker
  storage:
    description: Subdirectory within the repository the tracking files are stored.
    default: releases
  track:
    description: The track for the new release
    required: true
  version:
    description: A unique version id for the new release
    required: true
  created_at:
    description: A timestamp for the new releases. Automatically assigned if unspecified.
  images:
    description: A newline-separated list of images included in the release.
    required: true
  hashes:
    description: Hashes for the images. Newline-separated list in the form `IMAGE=HASH`.
    required: true
  commit:
    description: Commit changes to the local repository. Set to empty to disable.
    default: yes
  push:
    description: Push new commit to remote repository. Set to empty to disable.
    default: yes
  summary:
    description: A JSON file that will be created with a JSON summary of the created entry
    default: release-tracker-summary.json

outputs:
  entry:
    description: Id of the generated entry
    value: ${{ steps.add.outputs.ENTRY }}
  created_at:
    description: The timestamp for the new entry
    value: ${{ steps.add.outputs.CREATED_AT }}

runs:
  using: "composite"
  steps:
    - name: Create docker release log entry
      shell: python
      id: add
      run: |
        import sys
        import yaml
        import json
        import os
        from pathlib import Path
        src_dir = Path("${{ github.action_path }}").parent.parent / "src"
        sys.path.insert(0, str(src_dir))

        from release_tracker import ReleaseTracker

        tracker = ReleaseTracker(
          repository="${{ inputs.repository }}",
          path="${{ inputs.path }}",
          storage="${{ inputs.storage }}")

        track = "${{ inputs.track }}".strip()


        hashes = """${{ inputs.hashes }}""".strip()
        hashes = {
          img: img_hash
          for pair in hashes.splitlines()
          for img, img_hash in  pair.split("=")
          for img in [img.strip()]
          for img_hash in [img_hash.strip()]
        }

        entry = tracker.add_docker(
          track=track,
          version="${{ inputs.version }}",
          created_at="${{ inputs.created-at }}",
          images="""
            ${{ inputs.images }}
          """,
          hashes=hashes,
          commit=bool("${{ inputs.commit }}"),
          push=bool("${{ inputs.push }}"))

        summary = {
          "entry": entry,
          "repository": tracker.repository,
          "path": str(tracker.path),
          "storage": str(tracker.storage),
          "track": track,
        }
        with Path("${{ inputs.summary }}").open("w") as output:
          output.write(json.dumps(summary))
          output.write("\n")

        print("::group::New Release")
        print(yaml.safe_dump(entry))
        print("::endgroup::")
      
        with Path(os.environ["GITHUB_OUTPUT"]).open("a") as output:
          output.write("ENTRY=")
          output.write(f"{entry['created_at']}__{entry['version']}")
          output.write("\n")

          output.write("CREATED_AT=")
          output.write(entry["created_at"])
          output.write("\n")
