name: Run the ci-admin script
description: |
  Run the ci-admin script

inputs:
  args:
    description: Arguments to pass to ci-admin
    required: true
  token:
    description: Authentication token.
    required: true
  image:
    description: Run command inside a docker image containing the CI administration tools.
  cwd:
    description: Local directory where to run the script.
    default: ''
  github-token:
    description: GitHub login token
  github-user:
    description: GitHub user
  dockerhub-token:
    description: DockerHub login token
  dockerhub-user:
    description: DockerHub user
  output:
    description: Dump stdout to a file
    default: ci-admin.log

runs:
  using: "composite"
  steps:
    - name: Log in to GitHub
      uses: docker/login-action@v3
      if: inputs.github-token
      with:
        registry: ghcr.io
        username: ${{ inputs.github-user }}
        password: ${{ inputs.github-token }}

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      if: inputs.dockerhub-token
      with:
        username: ${{ inputs.dockerhub-user }}
        password: ${{ inputs.dockerhub-token }}

    - name: "Run ci-admin script"
      shell: python
      id: ci-admin
      run: |
        import os
        import sys
        from pathlib import Path

        action_dir = Path("${{ github.action_path }}")
        repo_dir = action_dir.parent.parent
        src_dir = repo_dir / "src"
        sys.path.insert(0, str(src_dir))

        from ci.admin import Admin

        print("::add-mask::${{ inputs.token }}")

        stdout = Admin.run(
          args = """${{ inputs.args }}""",
          image = "${{ inputs.image }}",
          cwd = "${{ inputs.cwd }}",
          token = "${{ inputs.token }}",
          capture_output=True)

        print("::group::ci-admin output")
        print(stdout)
        print("::endgroup::")

        output = "${{ inputs.output }}".strip()
        if output and stdout:
          with Path(output).open("w") as output:
            output.write(stdout)
          
