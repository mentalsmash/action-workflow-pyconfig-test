name: Build a Multi-Platform Image
description: |
  Build a multi-platform image

inputs:
  dockerfile:
    description: Dockerfile to use
    required: true
  image-repos:
    description: image repositories
    required: true
  base-image:
    description: Base image (repo:tag)
    required: true
  context:
    description: Build context
    required: false
    default: .
  image-tags-config:
    description: image tag configurations
    default: latest
  image-flavor-config:
    description: image flavor configurations
    default: ''
  github-token:
    description: GitHub login token
    required: false
  github-user:
    description: GitHub user
    required: false
  dockerhub-token:
    description: DockerHub login token
    required: false
  dockerhub-user:
    description: DockerHub user
    required: false
  action:
    description: push or load
    default: load
  build-platforms:
    description: Docker build platforms expression (,)
    default: linux/amd64,linux/arm64
  build-args:
    description: Extra build arguments

runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub
      uses: docker/login-action@v3
      if: inputs.github-token
      with:
        registry: ghcr.io
        username: ${{ inputs.github-user }}
        password: ${{ inputs.github-token }}

    - name: Log in to DockerHub
      uses: docker/login-action@v3
      if: inputs.login-dockerhub == 'yes'
      with:
        username: ${{ inputs.dockerhub-user }}
        password: ${{ inputs.dockerhub-token }}

    - name: Generate image tags
      id: image-tags
      shell: bash
      run: |
        (
          if [ -z "${{ inputs.image-tags-config}}" ]; then
            # Automatically derive tag from base image if no config provided
            echo IMAGE_TAGS=$(echo "${{ inputs.base-image}}" | tr / - | tr : -)
          else
            echo "IMAGE_TAGS<<EOF"
            echo "${{ inputs.image-tags-config }}"
            echo EOF
          fi
        ) >> ${GITHUB_OUTPUT}

    - name: Generate image repos
      id: image-repos
      shell: bash
      run: |
        (
          echo "IMAGE_REPOS<<EOF"
          echo "${{ inputs.image-repos }}" | tr ';' '\n'
          echo EOF
        ) >> ${GITHUB_OUTPUT}

    - name: Generate image flavor
      id: image-flavor
      shell: bash
      run: |
        (
          echo "IMAGE_FLAVOR<<EOF"
          echo "${{ inputs.image-flavor-config }}" | tr ';' '\n'
          echo EOF
        ) >> ${GITHUB_OUTPUT}

    - name: Extract image metadata
      id: metadata
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.image-repos.outputs.IMAGE_REPOS }}
        tags: ${{ steps.image-tags.outputs.IMAGE_TAGS }}
        flavor: ${{ steps.image-flavor.outputs.IMAGE_FLAVOR }}
      env:
        DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        file: ${{ inputs.dockerfile }}
        tags: ${{ steps.metadata.outputs.tags }}
        annotations: ${{ steps.metadata.outputs.annotations }}
        labels: ${{ steps.metadata.outputs.labels }}
        push: ${{ inputs.push }}
        context: ${{ inputs.context }}
        platforms: ${{ inputs.build-platforms }}
        build-args: |
          BASE_IMAGE=${{ inputs.base-image }}
          ${{ inputs.build-args || '' }}
